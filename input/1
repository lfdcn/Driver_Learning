#include <linux/module.h>
#include <linux/init.h>
#include <linux/input.h>

struct input_dev *inputdev;

static int __init inputdev_init(void)
{
    int ret;

    //分配一个input device对象
    inputdev = input_allocate_device(void);
    if (NULL == inputdev)
    {
        printk(KERN_ERR "input_allocate_device error\n");
        return -ENOMEM;
    }

    //初始化input device对象
    __set_bit(EV_KEY,inputdev->evbit);
    __set_bit(KEY_POWER, inputdev->evbit);

    //注册input device对象
    ret = input_register_device(inputdev);
    if(ret!=0){
        printk(KERN_ERR "input_register_device error\n");
        goto err_0;
    }

    return 0;
err_0:
    input_free_device(inputdev);
    return ret;
}

static void __exit inputdev_exit(void)
{
    input_unregister_device(inputdev);
    input_free_device(inputdev);
}

module_init(inputdev_init);
module_exit(inputdev_exit);
MODULE_LICENCE("GPL");
MODULE_DESCRIPT("Virtual Device Code");
